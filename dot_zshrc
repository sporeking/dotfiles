# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH
export PATH=$PATH:$HOME/.local/share/gem/ruby/3.3.0/bin:$HOME/.local/bin:$HOME/.npm-global/bin
export FZF_DEFAULT_OPTS="
--height 40%
--layout=reverse
--border
--info=inline
"
export TERMINAL=kitty

# Path to your oh-my-zsh installation.
# ZSH=/usr/share/oh-my-zsh/
ZSH=/home/sporeking/.oh-my-zsh
bindkey -v
bindkey -s '^[[A' fzf-find-file



# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time
# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git 
  zsh-autosuggestions 
  extract 
  z
  zsh-syntax-highlighting 
  conda-zsh-completion
  fzf
  zsh-vi-mode
)


# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
alias ll="ls -lh"
alias ga="git add ."
alias gs="git status"
alias gc="git commit"
alias v="nvim"
alias sg="sgpt"
alias ti="tgpt -i"
alias tast="tmux attach -t"
alias py312="/home/sporeking/miniconda3/envs/py312/bin/python"
alias py38="/home/sporeking/miniconda3/envs/py38/bin/python"

alias lightup="bash ~/scripts/turn_light.sh"
alias lightdown="bash ~/scripts/turn_down_light.sh"

alias fv="rg --hidden --glob '!.cache' --glob '!.git' --files | fzf | xargs -r nvim"

alias rt="sh ~/change_hyprland_layout.sh eDP-2"

alias ca="conda activate"
alias dca="conda deactivate"
alias psyu="sudo pacman -Syuu"
alias ysyu="yay -Syyu"

fcd() {
  # 使用 rg 查找目录，并通过 fzf 选择
  local dir
  dir=$(rg --hidden --files --glob '!.git' --glob '!.cache' | fzf --preview 'bat --style=numbers --color=always {} || cat {}')

  # 如果用户选择了文件或目录，则进入该目录
  if [[ -n "$dir" ]]; then
    cd "$(dirname "$dir")" || return
  fi
}

fo() {
  local file
  file=$(rg --hidden --files --glob '!.git/**' --glob '!node_modules/**' --glob '!.cache/**' | fzf --preview 'bat --style=numbers --color=always {} || cat {}')

  if [ -z "$file" ]; then
    echo "No file selected."
    return
  fi 

  extension="${file##*.}"
  case "$extension" in 
    pdf)
      firefox-nightly "$file"
      ;;
    jpg|jpeg|png|gif)
      xdg-open "$file"
      ;;
    c|cpp|py|sh|js|java|go|rs|lua)
      nvim "$file"
      ;;
    *)
      xdg-open "$file"
      ;;
  esac
  return
}

eject_disk() {
    if [ -z "$1" ]; then
        echo "请提供设备挂载名称，例如 /run/media/sporeking/Software"
        return 1
    fi

    MOUNTPOINT="$1"
    DEVICE="$(findmnt -n -o SOURCE "$MOUNTPOINT")"

    if [ -z "$DEVICE" ]; then
        echo "未找到设备，请检查挂载点是否正确"
        return 1
    fi

    # 卸载硬盘
    if umount "$MOUNTPOINT"; then
        echo "成功卸载 $MOUNTPOINT"
    else
        echo "卸载 $MOUNTPOINT 失败，请检查是否有打开的文件"
        return 1
    fi

    # 弹出硬盘
    if udisksctl power-off -b "$DEVICE"; then
        echo "成功弹出 $MOUNTPOINT"
    else
        echo "弹出 $MOUNTPOINT 失败"
        return 1
    fi
}

# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

ZSH_CACHE_DIR=$HOME/.cache/oh-my-zsh
if [[ ! -d $ZSH_CACHE_DIR ]]; then
  mkdir $ZSH_CACHE_DIR
fi

plugins+=(zsh-vi-mode)

source $ZSH/oh-my-zsh.sh

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/sporeking/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/sporeking/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/home/sporeking/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/sporeking/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<
# conda deactivate
conda activate py312

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
export LIBVIRT_DEFAULT_URI='qemu:///system'
export GEM_HOME=/home/sporeking/.gem
export PATH=/home/sporeking/.gem/bin:/home/sporeking/miniconda3/envs/py312/bin:/home/sporeking/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/bin:/Applications:/var/lib/flatpak/exports/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/home/sporeking/.local/share/gem/ruby/3.0.0/bin:/home/sporeking/.local/bin:/home/sporeking/.npm-global/bin:/home/sporeking/.local/share/gem/ruby/3.3.0/bin:/home/sporeking/.local/bin:/home/sporeking/.npm-global/bin
export GEM_HOME=/home/sporeking/.gem
export PATH=/home/sporeking/.gem/bin:/home/sporeking/.gem/bin:/home/sporeking/miniconda3/envs/py312/bin:/home/sporeking/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/bin:/Applications:/var/lib/flatpak/exports/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/home/sporeking/.local/share/gem/ruby/3.0.0/bin:/home/sporeking/.local/bin:/home/sporeking/.npm-global/bin:/home/sporeking/.local/share/gem/ruby/3.3.0/bin:/home/sporeking/.local/bin:/home/sporeking/.npm-global/bin

[ -z "$NVM_DIR" ] && export NVM_DIR="$HOME/.nvm"
source /usr/share/nvm/nvm.sh
source /usr/share/nvm/bash_completion
source /usr/share/nvm/install-nvm-exec
export MUJOCO_PY_MUJOCO_PATH=~/.mujoco/mujoco210
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:~/.mujoco/mujoco210/bin
export PATH=$PATH:~/.mujoco/mujoco210/bin
export PATH=$PATH:/home/sporeking/.cargo/bin
# export PATH=$PATH:~/tools/mujoco-3.2.6/bin
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/nvidia

